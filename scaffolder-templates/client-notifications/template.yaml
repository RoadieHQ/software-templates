apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: client-notifications-preview
  title: Send Client Notifications
  description: Send a notification to all client external slack channels

spec:
  owner: user:ian.link
  type: none
  parameters:
    - title: Slack
      properties:
        sendToSlackClients:
          title: Send to Slack Clients
          description: Send this message to Slack Client.
          type: boolean
          default: false

      if:
        properties:
          sendToSlackClients:
            const: true

      then:
        properties:
          sendToAllSlackClients:
            title: Send to All Slack Clients
            description: Send this message to the all Slack Client channels.
            type: boolean
            default: false

        if:
          properties:
            sendToAllSlackClients:
              const: false

        then:
          properties:
            slackChannel:
              type: string
              ui:field: SelectFieldFromApi
              ui:options:
                path: "catalog/entities"
                params:
                  filter: 'kind=resource,spec.type=tenant,metadata.labels.slack-channel-id'
                labelSelector: 'metadata.name'
                valueSelector: 'metadata.labels["slack-channel-id"]'

    - title: Teams
      properties:
        sendToTeamsClients:
          title: Send to Teams Clients
          description: Send this message to Teams Client.
          type: boolean
          default: false

      if:
        properties:
          sendToTeamsClients:
            const: true

      then:
        properties:
          sendToAllTeamsClients:
            title: Send to All Teams Clients
            description: Send this message to the all Teams Client channels.
            type: boolean
            default: false

        if:
          properties:
            sendToAllTeamsClients:
              const: false
        then:
          properties:
            teamsChannel:
              type: string
              ui:field: SelectFieldFromApi
              ui:options:
                path: "catalog/entities"
                params:
                  filter: 'kind=resource,spec.type=tenant,metadata.annotations.roadie.io/ms-teams-id'
                labelSelector: 'metadata.name'
                valueSelector: 'metadata.labels["ms-teams-channel-id"]'

    - title: Message
      required:
        - message
      properties:
        message:
          title: Message
          description: I support markdown!
          type: string
          ui:widget: textarea
          ui:options:
            rows: 30

  steps:
    - id: 'get-slack-channel-ids'
      name: "Get Slack Channel Id's"
      if: ${{ parameters.sendToSlackClients }}
      action: 'http:backstage:request'
      input:
        method: 'GET'
        path: 'catalog/entities'
        params:
          filter: 'kind=resource,spec.type=tenant,metadata.labels.slack-channel-id'
          fields: 'metadata.name,metadata.labels.slack-channel-id'

    - id: 'send-notification-all-slack-clients'
      name: 'Send Notification to All Slack Clients'
      if: ${{ parameters.sendToSlackClients and parameters.sendToAllSlackClients }}
      each: "${{ steps['get-slack-channel-ids'].output.body }}"
      action: 'http:backstage:request'
      input:
        method: 'POST'
        path: 'proxy/slack-roadie-announcements/chat.postMessage'
        headers:
          content-type: 'application/json'
        body:
          channel: ${{ each.value.metadata.labels["slack-channel-id"] }}
          blocks:
            - type: section
              text:
                type: mrkdwn
                text: ${{ parameters.message }}

    - id: 'send-notification-single-slack-client'
      name: 'Send Notification to Single Slack Client'
      if: ${{ parameters.sendToSlackClients and parameters.sendToAllSlackClients == false }}
      action: 'http:backstage:request'
      input:
        method: 'POST'
        path: 'proxy/slack-roadie-announcements/chat.postMessage'
        headers:
          content-type: 'application/json'
        body:
          channel: ${{ parameters.sleckChannel }}
          blocks:
            - type: section
              text:
                type: mrkdwn
                text: ${{ parameters.message }}

    - id: 'get-ms-teams-channel-ids'
      name: "Get MS Team Id's"
      if: ${{ parameters.sendToTeamsClients }}
      action: 'http:backstage:request'
      input:
        method: 'GET'
        path: 'catalog/entities'
        params:
          filter: 'kind=resource,spec.type=tenant,metadata.labels.ms-teams-channel-id'
          fields: 'metadata.name,metadata.labels.ms-teams-channel-id'

    - id: 'send-notification-all-ms-teams-clients'
      name: 'Send Notification to All MS Teams Clients'
      if: ${{ parameters.sendToTeamsClients and parameters.sendToAllTeamsClients }}
      each: "${{ steps['get-ms-teams-channel-ids'].output.body }}"
      action: 'http:backstage:request'
      input:
        method: 'POST'
        path: 'proxy/ms-teams/teams/${{ each.value.metadata.labels["ms-teams-channel-id"] }}'
        headers:
          content-type: 'application/json'
        body:
          content: ${{ parameters.message }}

    - id: 'send-notification-single-ms-teams-client'
      name: 'Send Notification to Single MS Teams Client'
      if: ${{ parameters.sendToTeamsClients and parameters.sendToAllTeamsClients == false }}
      action: 'http:backstage:request'
      input:
        method: 'POST'
        path: 'proxy/ms-teams/teams/${{ parameter.teamsChannel }}'
        headers:
          content-type: 'application/json'
        body:
          content: ${{ parameters.message }}
