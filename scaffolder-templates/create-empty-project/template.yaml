apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-empty-project
  title: Create Empty Project
  description: Create Empty Project

spec:
  owner: info@roadie.io
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - description
        - type
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
        description:
          title: Description
          type: string
          description: Help others understand what this project is for.
        type:
          title: Type of Component
          type: string
          description: service, library, etc.
          enum: ["service", "library", "website", "other"]
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: 
              - Group
    - title: Choose a location
      description: |
        This section will ask for details about the Owner and Repository name which will then be used 
        to create a repository in that location using your GitHub credentials.
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Enter an Owner and Repository Name
          description: |
            The Owner should be your GitHub username. The Repository name should be a name that is not one that exists already in your GitHub account.
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes:
                github:
                  - workflow
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          type: ${{ parameters.type }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: 'This is ${{ parameters.component_id }}'
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        requireCodeOwnerReviews: true
        deleteBranchOnMerge: true


  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}


