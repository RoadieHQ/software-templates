apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: delete-tenant
  title: Delete tenant
  description: Send an API call to the tenant manager to delete a tenant.

spec:
  owner: user:ianlink
  type: none
  parameters:
    - title: Provide some simple information
      required:
        - tenant_name
        - tenant_email_domain
        - tenant_environment
        - s3_emptied
      properties:
        tenant_name:
          title: Name
          type: string
          description: No special chars, numbers as the first char, or dashes as the first or last char. 
          ui:autofocus: true
        tenant_email_domain:
          title: Email domain
          type: string
          description: The email domain of users who will be allowed to access the tenant.S
        tenant_environment:
          title: Environment
          type: string
          default: dev
          enum: ['dev', 'prod']
        s3_emptied:
          title: Have you emptied the tenants S3 Bucket?
          type: boolean
          ui:widget: radio
            
  steps:
    - id: devTenantCheck
      name: Check if Dev tenant
      if: ${{parameters.tenant_environment === 'dev'}}
      action: http:backstage:request
      input:
        method: 'DELETE'
        path: proxy/tenant-manager-dev/api/tenant
        body: |
              {
                "tenantName": "${{ parameters.tenant_name }}",
                "tenantEmailDomain": "${{ parameters.tenant_email_domain }}",
                "tenantEnvironment": "dev",
                "skipFailures": false
              }

    - id: ProdTenantCheck
      name: Check if Prod tenant
      if: ${{parameters.tenant_environment === 'prod'}}
      action: http:backstage:request
      input:
        method: 'DELETE'
        path: proxy/tenant-manager/api/tenant
        body: |
              {
                "tenantName": "${{ parameters.tenant_name }}",
                "tenantEmailDomain": "${{ parameters.tenant_email_domain }}",
                "tenantEnvironment": "prod",
                "skipFailures": false
              }

  output:
    resp: ${{ steps.devTenantCheck.output.body }} ${{ steps.ProdTenantCheck.output.body }}
